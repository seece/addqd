/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include <cstdio>
#include <Windows.h>
#include "PluginProcessor.h"
#include "PluginEditor.h"
#include "editor_state.h"

void initConsole(void) {
    AllocConsole();
    freopen( "CON", "w", stdout );
    freopen( "CON", "w", stderr );
}

//==============================================================================
QdvstAudioProcessorEditor::QdvstAudioProcessorEditor (QdvstAudioProcessor* ownerFilter)
    : AudioProcessorEditor (ownerFilter)
{
	
	#ifdef DEBUG
	initConsole();
	printf("Starting GUI.\n");
	#endif

    setSize (640, 480);
	testknob = new Slider ("scale");
	testknob->setBounds(10, 100, 150, 32);
	testknob->setSliderStyle(juce::Slider::SliderStyle::RotaryVerticalDrag);
	testknob->addListener(this);
	addAndMakeVisible(testknob);

	channelLabel = new Label("channelLabel", "channels");
	channelLabel->setBounds(10, 150, 150, 80);
	
	
	EditorState::editor = this;

	// a busy loop waiting for the processor to become available
	while (!EditorState::processor) {
		
	}

	juce::String channelText("channels: ");
	channelText += EditorState::processor->getNumChannels();
	channelLabel->setText(channelText, dontSendNotification);

	addAndMakeVisible(channelLabel);

	#ifdef DEBUG
	printf("GUI system nominal.\n");
	#endif
}

QdvstAudioProcessorEditor::~QdvstAudioProcessorEditor()
{
	deleteAllChildren();

	#ifdef DEBUG
	FreeConsole();
	#endif
}

//==============================================================================
void QdvstAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::white);
    g.setColour (Colours::black);
    g.setFont (15.0f);
    g.drawFittedText ("PEISIK ADDQD VST",
                      0, 0, getWidth(), getHeight(),
                      Justification::topLeft, 1);


}

void QdvstAudioProcessorEditor::sliderValueChanged(Slider* slider) 
{
	#ifdef DEBUG
	printf("slider value changse! %lf\n", slider->getValue());
	#endif

	const GenericScopedLock<CriticalSection> scopedLock(EditorState::editorLock);

	if (!EditorState::processor) {
		return;
	}

	QdvstAudioProcessor* processor = EditorState::processor;
	
	//editorLock.
}